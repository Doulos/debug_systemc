#!gdb
# Useful for SystemC debug

init-if-undefined $loaded_systemc = 0
if $loaded_systemc != 0
  echo \033[1m\033[91mWarning: systemc already loaded -- skipping \033[0m
  # cause an error to abort
  skip_loading
end
echo loading\n
set $loaded_systemc = 1

define break_on_return
  finish
end

#------------------------------------------------------------------------------
define sc-status
  call Debug::status()
end
document sc-status
  Display current situation
end

#------------------------------------------------------------------------------
define set_debugging
  call Debug::set_debugging(1)
end

#------------------------------------------------------------------------------
define sc-threads
  rbreak \b[A-Z][a-z].*_thread\b
end

#------------------------------------------------------------------------------
define scmethods
  rbreak \b[A-Z][a-z].*_method\b
end

#------------------------------------------------------------------------------
define sc-overrides
  rbreak \b[A-Z][a-z].*::before_end_of_elaboration
  rbreak \b[A-Z][a-z].*::end_of_elaboration
  rbreak \b[A-Z][a-z].*::start_of_simulation
  rbreak \b[A-Z][a-z].*::end_of_simulation
end

#------------------------------------------------------------------------------
define systemc
  dont-repeat
  init-if-undefined $did_systemc = 0
  if $did_systemc != 0
    echo \033[1m\033[91mWarning: systemc already executed -- skipping \033[0m
  else
    set $did_systemc = 1
    #---------------------------------------------------------------------------
    set pagination off
    set breakpoint pending on
    #---------------------------------------------------------------------------
    break Top::Top
    set variable $b1 = $bpnum
    commands $b1
      echo \033[1m\033[95mEntered top-level constructor.\n\033[0m
    end
    break sc_main
    set variable $b2 = $bpnum
    break sc_interrupt_here
    set variable $b3 = $bpnum
    break sc_stop_here
    set variable $b4 = $bpnum
    sc-threads
    sc-overrides
    break breakpoint
    commands $b3 $b4
      silent
      backtrace
      frame 3
    end
    break sc_module::wait
    commands
      silent
      echo \033[1m\033[91m--- wait ---\n
      print this->name()
    end
    #---------------------------------------------------------------------------
    catch throw
    catch catch
    skip -rfunction sc_core::.*
    skip -rfunction tlm::.*
    info breakpoints
    echo --------------------------------------------------------------------------------\n
  end
end
document systemc
  Initialization for debugging systemc
end

# vim:syntax=gdb
