# Handy commands for interactive gdb

init-if-undefined $loaded_handy = 0
if $loaded_handy != 0
  echo \033[1m\033[91mWarning: handy already loaded -- skipping \033[0m
  # cause an error to abort
  skip_loading
end
echo loading\n
set $loaded_handy = 1

#------------------------------------------------------------------------------
define exit
  quit
end
document exit
  Alias for quit
end
printf "Defined exit\n"

#------------------------------------------------------------------------------
define which
  shell which $arg0
end
document which
  Find an executable
end
printf "Defined which\n"

#------------------------------------------------------------------------------
define banner
  shell header $0
end
document banner
  Display a text banner
end
printf "Defined banner\n"

#------------------------------------------------------------------------------
define ls
  if $argc == 0
    shell ls
  end
  if $argc == 1
    shell ls $arg0
  end
  if $argc == 2
    shell ls $arg0 $arg1
  end
  if $argc == 3
    shell ls $arg0 $arg1 $arg2
  end
end
document ls
  execute shell ls
end
printf "Defined ls\n"

#------------------------------------------------------------------------------
define nano
  if $argc == 1
    shell nano $arg0
  end
  if $argc == 2
    shell nano $arg0 $arg1
  end
  if $argc == 3
    shell nano $arg0 $arg1 $arg2
  end
end
document nano
  execute nano
end
printf "Defined nano\n"

#------------------------------------------------------------------------------
define vim
  if $argc == 1
    shell vim $arg0
  end
  if $argc == 2
    shell vim $arg0 $arg1
  end
  if $argc == 3
    shell vim $arg0 $arg1 $arg2
  end
end
document vim
  execute vim
end
printf "Defined vim\n"

#------------------------------------------------------------------------------
define less
  shell less $arg0
end
document less
  execute less
end
printf "Defined less\n"

#------------------------------------------------------------------------------
define clear
  shell clear
end
document clear
  clear screen
end
printf "Defined clear\n"

#------------------------------------------------------------------------------
define agcpp
  if $argc == 1
    shell ag --cpp -s $arg0
  end
  if $argc == 2
    shell ag --cpp -s $arg0 $arg1
  end
end
document agcpp
  Search for REGEX in local C++ files (source)
end
printf "Defined agcpp\n"

# vim:syntax=gdb
