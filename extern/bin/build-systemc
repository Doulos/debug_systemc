#!/bin/bash
#
# Steps to build and install SystemC
#
#| For help on options use --help or examine utils.bash
#
TOOL_BRIEF="$0 - build and install SystemC from github source"
TOOL_NAME="SystemC"
TOOL_INFO='Go to <https://accellera.org/downloads/standards/systemc> for more information.'
# ${TOOL_SRC}/${TOOL_BASE} for full path to source
TOOL_SRC="${HOME}/.local/src"
TOOL_BASE="systemc"
TOOL_URL="https://github.com/accellera-official/systemc.git"
TOOL_VERS='master' # latest or 3.0 or 2.3.4
TOOL_CHECKOUT=""

export TOOL_BRIEF TOOL_NAME TOOL_SRC TOOL_BASE TOOL_URL TOOL_INFO TOOL_VERS TOOL_CHECKOUT TOOL_PATCHES
export SYSTEMC_HOME TOOL_SRC BUILD_DIR CLEAN CMAKE_INSTALL_PREFIX CMAKE_BUILD_TYPE CMAKE_APPLE_SILICON_PROCESSOR

function Realpath() {
  if [[ $# == 0 ]]; then set - .; fi
  /usr/bin/perl '-MCwd(abs_path)' -le '$p=abs_path(join(q( ),@ARGV));print $p if -e $p' "$*"
}

SCRIPTDIR="$(Realpath "$(dirname "$0")"/../bin)"
if [[ ! -r "${SCRIPTDIR}/utils.bash" ]]; then
  SCRIPTDIR="$(Realpath "${HOME}"/.local/bin)"
fi
if [[ ! -r "${SCRIPTDIR}/utils.bash" ]]; then
  SCRIPTDIR="$(Realpath "$(dirname "$0")")"
fi
if [[ ! -r "${SCRIPTDIR}/utils.bash" ]]; then
  printf "FATAL: Missing required source file '%s'\n" "${SCRIPTDIR}/utils.bash"
  exit 1
fi

export UTILS_VERSION
# shellcheck disable=SC2250,SC1091
source "$SCRIPTDIR/utils.bash"

SetupLogdir "$0"
SCRIPTPATH="$(Realpath "$0")"
Report_info -cyn "Executing ${SCRIPTPATH} with utils.bash v${UTILS_VERSION}"

GetBuildOpts "$0" "$@"
CMAKE_INSTALL_PREFIX="${SYSTEMC_HOME}"
ConfirmBuildOpts || exit

Create_and_Cd "${TOOL_SRC}" || exit
Report_info -grn "Obtaining ${TOOL_NAME} source"
GetSource_and_Cd "${TOOL_BASE}" "${TOOL_URL}" || exit
Select_version "${TOOL_VERS}" || exit

Report_info -grn "Building ${TOOL_NAME}"
# shellcheck disable=SC2119,SC2312
Configure_tool | Log
# shellcheck disable=SC2119,SC2312
Compile_tool   | Log

if [[ -z "${NOINSTALL+x}" || "${NOINSTALL}" == "no" ]]; then
  # shellcheck disable=SC2119,SC2312
  Install_tool | Log

  # Optional clean up
  if [[ "${CLEAN}" == 1 ]]; then
    Report_info -red "Clean up"
    cd "${TOOL_SRC}" || Report_fatal "Unable to enter source directory"
    # shellcheck disable=SC2312
    rm -fr "${TOOL_NAME}"* | Log
  fi

  Report_info -grn "Finished installation of ${TOOL_NAME} into ${SYSTEMC_HOME}"
else
  Report_info -mag "Stopped shy of installing ${TOOL_NAME}"
fi

# vim:nospell
